<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 Red Hat, Inc. and/or its affiliates.
  ~
  ~ Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.wildfly.swarm.examples</groupId>
  <artifactId>examples-parent</artifactId>
  <version>2017.3.3</version>

  <name>WildFly Swarm Examples: Parent</name>
  <description>WildFly Swarm Examples: Parent</description>

  <packaging>pom</packaging>

  <properties>
    <version.wildfly-swarm>${project.version}</version.wildfly-swarm>

    <maven.min.version>3.2.1</maven.min.version>

    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <repositories>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>http://repository.jboss.org/nexus/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>

    <!--
        needed until the latest version of gradle-maven-plugin is released to central:
        https://github.com/LendingClub/gradle-maven-plugin/issues/25
    -->
    <pluginRepository>
      <id>spring</id>
      <name>Spring releases</name>
      <url>http://repo.spring.io/libs-release-remote/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <finalName>${project.artifactId}</finalName>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.wildfly.swarm</groupId>
          <artifactId>wildfly-swarm-plugin</artifactId>
          <version>${version.wildfly-swarm}</version>
          <configuration>
            <jvmArguments>
              <jvmArgument>-Xmx128m</jvmArgument>
            </jvmArguments>
          </configuration>
          <executions>
            <execution>
              <id>package</id>
              <goals>
                <goal>package</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <systemPropertyVariables>
              <org.apache.maven.user-settings>${session.request.userSettingsFile.path}</org.apache.maven.user-settings>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.10</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-resource</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/it/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*IT.java</include>
          </includes>
          <systemPropertyVariables>
            <phantomjs.binary.version>2.1.1</phantomjs.binary.version>
            <org.apache.maven.user-settings>${session.request.userSettingsFile.path}</org.apache.maven.user-settings>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.graphene</groupId>
      <artifactId>graphene-webdriver</artifactId>
      <version>2.1.0.Alpha2</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.1.12.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-bom</artifactId>
        <version>2.0.1.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.wildfly.swarm.examples</groupId>
        <artifactId>examples-base</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <modules>
    <module>base</module>

    <module>arjuna</module>
    <module>arjuna/arjuna</module>
    <module>arjuna/stm</module>
    <module>config-options</module>
    <module>config-options/cdi-injection</module>
    <module>config-options/xml-configuration</module>
    <module>datasource</module>
    <module>datasource/datasource-subsystem</module>
    <module>datasource/datasource-war</module>
    <module>jaxrs</module>
    <module>jaxrs/jaxrs</module>
    <module>jaxrs/jaxrs-https</module>
    <module>jaxrs/jaxrs-ajp</module>
    <module>jaxrs/jaxrs-cdi</module>
    <module>jaxrs/jaxrs-cdi-deltaspike</module>
    <module>jaxrs/contract-based-testing</module>
    <module>jaxrs/health</module>
    <module>jaxrs/jaxrs-deltaspike-data</module>
    <module>jpa</module>
    <module>jpa/jpa</module>
    <module>jpa-jaxrs-cdi</module>
    <module>jpa-jaxrs-cdi/jpa-jaxrs-cdi</module>
    <module>jpa-jaxrs-cdi/jpa-jaxrs-cdi-jta</module>
    <module>jsf</module>
    <module>msc</module>
    <module>servlet</module>
    <module>servlet/servlet</module>
    <module>servlet/servlet-cdi</module>
    <module>static</module>
    <module>static/static-shrinkwrap</module>
    <module>static/static-war</module>
    <module>transactions</module>
    <module>transactions/transactions</module>

<!-- <module>kitchensink-html5-mobile</module> -->
    <module>microprofile</module>
    <module>security</module>
    <module>security/jaas</module>
    <module>security/keycloak</module>
    <module>vaadin</module>
  </modules>

  <profiles>
    <profile>
      <id>unsupported</id>
      <activation>
        <property>
          <name>!swarm.product.build</name>
        </property>
      </activation>
      <modules>
        <module>camel</module>
        <module>camel/camel-activemq</module>
        <module>camel/camel-core</module>
        <module>camel/camel-cdi</module>
        <module>camel/camel-cxf-jaxrs</module>
        <module>camel/camel-cxf-jaxws</module>
        <module>camel/camel-jms</module>
        <module>camel/camel-jpa</module>
        <module>camel/camel-mail</module>
        <module>camel/camel-swagger</module>
        <module>jaxrs/kotlin</module>
        <module>jaxrs/opentracing-hawkular</module>
        <module>jaxrs/scala</module>
        <module>jaxrs/swagger</module>
        <module>jaxrs/zipkin</module>
        <module>jaxws</module>
        <module>jpa/jpa-eclipselink</module>
        <module>management-console</module>
        <module>messaging</module>
        <module>messaging/messaging-simple</module>
        <module>messaging/messaging-mdb</module>
        <module>messaging/messaging-clustering</module>
        <module>resource-adapter</module>
        <module>resource-adapter/resource-adapter-deployment</module>

        <!-- <module>gradle</module> -->

        <module>flyway</module>
        <module>logstash</module>
        <module>ribbon</module> <!-- declares submodules due to wildfly-swarm:multistart -->
        <module>ribbon-consul</module> <!-- declares submodules due to wildfly-swarm:multistart -->
        <!-- <module>ribbon-secured</module> -->
        <module>spring</module>
        <module>spring/spring-data</module>
        <module>swagger-webapp</module>
        <module>vertx</module>
      </modules>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>bom-all</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>

    <profile>
      <id>docker</id>
      <modules>
        <module>docker</module>
        <module>docker/docker-jaxrs</module>
        <module>docker/docker-jaxrs-dockerfile</module>
      </modules>
    </profile>
    <profile>
      <id>uberjar</id>
      <properties>
        <wildfly-swarm.useUberJar>true</wildfly-swarm.useUberJar>
      </properties>
    </profile>
    <profile>
      <id>not-skipping-tests</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.wildfly.swarm</groupId>
              <artifactId>wildfly-swarm-plugin</artifactId>
              <version>${version.wildfly-swarm}</version>
              <executions>
                <execution>
                  <id>start</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                  <configuration>
                    <stdoutFile>target/stdout.log</stdoutFile>
                    <stderrFile>target/stderr.log</stderrFile>
                  </configuration>
                </execution>
                <execution>
                  <id>stop</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

</project>
