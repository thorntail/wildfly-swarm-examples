buildscript {
    version = System.getProperty('swarmVersion') ?: VERSION_THORNTAIL

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("io.thorntail:thorntail-gradle-plugin:$version") {
            if (version.endsWith('-SNAPSHOT')) {
                changing = true
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    // Configure the repositories for all projects.
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://maven.repository.redhat.com/nexus/content/repositories/thirdparty-releases/'
        }
        maven {
            name 'Gradle Tooling'
            url 'https://repo.gradle.org/gradle/libs-releases/'
        }
    }

    version = System.getProperty('swarmVersion') ?: VERSION_THORNTAIL

    dependencies {
        // Include the JavaEE API dependency.
        compileOnly 'javax:javaee-api:7.0'
        testCompileOnly 'javax:javaee-api:7.0'

        // Include the Thorntail BOM for testing the code.
        testImplementation("io.thorntail:bom-all:$version") {
            if (version.endsWith('-SNAPSHOT')) {
                changing = true
            }
        }

        testImplementation "junit:junit:4.12"
        testImplementation("io.thorntail:gradle-arquillian-adapter:$version") {
            if (version.endsWith('-SNAPSHOT')) {
                changing = true
            }
        }
        // Make use of the tooling jar appropriate for the current Gradle version.
        testImplementation "org.gradle:gradle-tooling-api:${gradle.gradleVersion}"

        // Include the Arquillian JaCoCo extension
        testImplementation 'org.jboss.arquillian.extension:arquillian-jacoco:1.0.0.Alpha9'

    }

    // Configure the properties required for enabling the JaCoCo agent withing Arquillian tests
    test {

        doFirst {
            // Gradle starts the test task with the JaCoCo agent configured.
            // The Arquillian tests are run in a separate thread which does not have the JaCoCo agent enabled.
            // In the below code, we retrieve the JaCoCo details and make it available as a system property that is
            // consumed by the "arquillian.xml" file in the "test/resources" folder.
            String arg = jacoco.asJvmArg
            String dir = project.buildDir
            arg = arg.replaceAll(project.relativePath(dir), dir)
            systemProperty 'thorntail.arquillian.jvm.args', arg
        }
    }

    // Optional configuration
    // ----------------------
    // The following property needed *only if* you have a pom.xml file along with your build.gradle script.
    // Otherwise, you do not need to set this property.
    afterEvaluate { Project project ->
        if (project.pluginManager.hasPlugin('java')) {
            project.test {
                systemProperty 'thorntail.filesystem.layout.class', 'org.wildfly.swarm.internal.GradleFileSystemLayout'
            }
        }
    }
}

