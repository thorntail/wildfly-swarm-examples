buildscript {
    String thorntailVersion = System.getProperty('thorntailVersion') ?: VERSION_THORNTAIL

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath "io.thorntail:thorntail-gradle-plugin:$thorntailVersion"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://repo.gradle.org/gradle/libs-releases-local/"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

String thorntailVersion = System.getProperty('thorntailVersion') ?: VERSION_THORNTAIL

apply plugin: 'war'
apply plugin: 'thorntail'

dependencies {

    compileOnly 'javax:javaee-api:8.0'

    // Include the "platform project" that we have dependency on.
    implementation platform('io.thorntail.examples.gradle:thorntail-multi-module-app:0.0.0')

    // Pull in the Thorntail BOM that we are supposed to use (as dictated by our "platform-project").
    implementation platform('io.thorntail:bom-all')

    // If the dependent project is available (as an included build), then the below version number is ignored.
    // This is useful when you wish to test changes across multiple projects at the same time.
    implementation 'io.thorntail.examples.gradle:library-module:0.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'commons-io:commons-io:2.4'
    testImplementation "io.thorntail:cdi"
    testImplementation "io.thorntail:jaxrs"
}

thorntail {
    properties {
        swarm.http.port = 8181
    }

    bundleDependencies = true
    fractions = ['io.thorntail:swagger']
}

/**
 * Run the Thorntail application with the debug option enabled.
 */
task runApp(type: JavaExec, dependsOn: [assemble, 'thorntail-package']) {
    jvmArgs += '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787'
    main = '-jar'

    doFirst() {
        File file = (project.tasks['jar'].destinationDir as File).listFiles(new FilenameFilter() {
            @Override
            boolean accept(File dir, String name) {
                return name.endsWith('-thorntail.jar')
            }
        }).first()
        args file.absolutePath
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}
